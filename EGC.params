#okresla jak duzo rzeczy ma byc wyswietlane w konsoli
verbosity    = 0

#okresla ilosc wątków i startowe ziarno
breedthreads = auto
evalthreads  = auto
seed.0       = time
seed.1       = time
seed.2       = time
seed.3       = time

#określenie klas odpowiedzialnych za poszczególne lementy algorytmu
state  = ec.simple.SimpleEvolutionState
pop    = ec.Population
init   = ec.simple.SimpleInitializer
finish = ec.simple.SimpleFinisher
breed  = ec.simple.SimpleBreeder
eval   = ec.simple.SimpleEvaluator
stat   = ec.simple.SimpleStatistics
exch   = ec.simple.SimpleExchanger

#maksymalna liczba generacji
generations             = 100000
quit-on-run-complete    = true

#wyłaczenie obsługi checkpointów
checkpoint              = false
checkpoint-prefix       = ec
checkpoint-modulo       = 1

#określenie pliku ze wynikami
stat.file       = $Results.stat

#określa ilość populacji
pop.subpops     = 1
pop.subpop.0    = ec.Subpopulation

#rozmiar populacji
pop.subpop.0.size                  = 100
pop.subpop.0.duplicate-retries     = 0

#określa klasę reprezentującą gatunek
pop.subpop.0.species               = ec.vector.IntegerVectorSpecies

#maksymalny Integer w genomie
pop.subpop.0.species.max-gene      = 200

#minimalny Integer w genomie
pop.subpop.0.species.min-gene      = 0

#określa klasę reprezentującą osobnika
pop.subpop.0.species.ind           = ec.vector.IntegerVectorIndividual
pop.subpop.0.species.fitness       = ec.simple.SimpleFitness

#określa typ krzyżowania
pop.subpop.0.species.crossover-type = one

#określa typ i częstotliwość mutacji
pop.subpop.0.species.mutation-type  = reset
pop.subpop.0.species.mutation-prob  = 0.05

pop.subpop.0.species.pipe           = ec.vector.breed.VectorMutationPipeline
pop.subpop.0.species.pipe.source.0  = ec.vector.breed.VectorCrossoverPipeline

#określa rodzaj selekcji
pop.subpop.0.species.pipe.source.0.source.0 = ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.1 = ec.select.TournamentSelection

#określa ilość rywalizujących osobników
select.tournament.size = 10

#określa klasę problemu
eval.problem = EGC.EdgeGraphColoringProblem

breed.elites.0 = 1


pop.subpop.0.species.genome-size    = 300
